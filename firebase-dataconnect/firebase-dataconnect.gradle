// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

plugins {
    id 'firebase-library'
    id("kotlin-android")
    id 'com.google.protobuf'
}

firebaseLibrary {
    libraryGroup "dataconnect"
    publishSources = true
    testLab {
        enabled = true
        timeout = '30m'
    }
}

protobuf {
    // Configure the protoc executable
    protoc {
        // Download from repositories
        artifact = "com.google.protobuf:protoc:$protocVersion"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:$grpcVersion"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java { option 'lite' }
            }
            task.plugins {
                grpc {
                    option 'lite'
                }
            }
        }
    }
}

android {
    adbOptions {
        timeOutInMs 60 * 1000
    }

    namespace "com.google.firebase.dataconnect"
    compileSdkVersion project.targetSdkVersion
    defaultConfig {
        targetSdkVersion project.targetSdkVersion
        minSdkVersion 21
        versionName version
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'proguard.txt'
    }

    sourceSets {
        main {
            proto {
                srcDir 'src/proto'
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    testOptions.unitTests.includeAndroidResources = true

}

tasks.withType(Test) {
    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
}

googleJavaFormat {
}

dependencies {
    androidTestAnnotationProcessor 'com.google.auto.value:auto-value:1.6.5'
    androidTestImplementation "androidx.annotation:annotation:1.1.0"
    androidTestImplementation "androidx.test.ext:junit:$androidxTestJUnitVersion"
    androidTestImplementation 'androidx.test:rules:1.5.0'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'com.fasterxml.jackson.core:jackson-databind:2.9.8'
    androidTestImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'org.mockito:mockito-android:2.25.0'
    androidTestImplementation 'org.mockito:mockito-core:2.25.0'
    androidTestImplementation("com.google.truth:truth:$googleTruthVersion") {
         exclude group: "org.codehaus.mojo", module: "animal-sniffer-annotations"
     }
    annotationProcessor 'com.google.auto.value:auto-value:1.6.5'
    compileOnly 'com.google.auto.value:auto-value-annotations:1.6.6'
    compileOnly 'javax.annotation:jsr250-api:1.0'
    implementation "io.grpc:grpc-android:$grpcVersion"
    implementation "io.grpc:grpc-okhttp:$grpcVersion"
    implementation "io.grpc:grpc-protobuf-lite:$grpcVersion"
    implementation "io.grpc:grpc-stub:$grpcVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'com.google.android.gms:play-services-base:18.0.1'
    implementation 'com.google.android.gms:play-services-basement:18.1.0'
    implementation 'com.google.android.gms:play-services-tasks:18.0.1'
    implementation 'com.google.firebase:firebase-annotations:16.2.0'
    implementation 'com.google.firebase:firebase-appcheck-interop:17.0.0'
    implementation 'com.google.firebase:firebase-database-collection:18.0.1'
    implementation project(':protolite-well-known-types')
    implementation('com.google.firebase:firebase-auth-interop:19.0.2') {
         exclude group: "com.google.firebase", module: "firebase-common"
     }
    implementation(project(":firebase-common"))
    implementation(project(":firebase-common:ktx"))
    implementation(project(":firebase-components"))
    javadocClasspath 'com.google.auto.value:auto-value-annotations:1.6.6'
    testCompileOnly "com.google.protobuf:protobuf-java:$protocVersion"
    testImplementation "androidx.test:core:$androidxTestCoreVersion"
    testImplementation "com.google.truth:truth:$googleTruthVersion"
    testImplementation "org.hamcrest:hamcrest-junit:2.0.0.0"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation 'com.fasterxml.jackson.core:jackson-databind:2.9.8'
    testImplementation 'com.google.android.gms:play-services-tasks:18.0.1'
    testImplementation 'com.google.guava:guava-testlib:12.0-rc2'
    testImplementation 'junit:junit:4.12'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:2.25.0'
    testImplementation project(':firebase-database-collection')
    testImplementation project(':firebase-dataconnect')
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:deprecation" << "-Xlint:unchecked" << "-Werror"
    }
}

// ==========================================================================
// Copy from here down if you want to use the google-services plugin in your
// androidTest integration tests.
// ==========================================================================
ext.packageName = "com.google.firebase.dataconnect"
apply from: '../gradle/googleServices.gradle'
