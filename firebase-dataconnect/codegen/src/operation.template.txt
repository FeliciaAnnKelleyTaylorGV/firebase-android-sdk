{{- /* ================================================================== */ -}}

{{- define "VariablesClassDefinition" -}}
@Serializable data class Variables(
{{- range .variables -}}
val {{ .name }}: {{ template "KotlinTypeFor" . }},
{{- end -}}
) {

{{- range .variables -}}
    {{- if eq .type "String" }}{{ continue }}{{ end -}}
    {{- if eq .type "Int" }}{{ continue }}{{ end -}}
    {{ template "VariablesNestedClassDefinition" . }}
{{- end -}}

}
{{- end -}}

{{- /* ================================================================== */ -}}

{{- define "VariablesNestedClassDefinition" }}
    @Serializable data class {{ .type }}(
    {{- range .fields -}}
        val {{ .name }}: {{ template "KotlinTypeFor" . }},
    {{- end -}}
    )
{{ end -}}

{{- /* ================================================================== */ -}}

{{ define "KotlinTypeFor" -}}
{{- if .isList -}}List<{{- end -}}
{{- .type -}}
{{- if .isList -}}>{{- end -}}
{{- if .isNullable -}}?{{- end -}}
{{- end -}}

{{- /* ================================================================== */ -}}

{{- define "QueryHelpers" -}}
{{- end -}}

{{- /* ================================================================== */ -}}

{{- define "MutationHelpers" -}}
    {{- if and .flattenedVariables (gt (len .flattenedVariables) 0) -}}
    suspend fun MutationRef<
      {{- template "VariablesKotlinType" . -}}, {{ template "DataKotlinType" . -}}
    >.execute(
        {{- range .flattenedVariables -}}
        {{ .name }}: {{ template "KotlinTypeFor" . }},
        {{- end -}}
    ) =
        execute(zzyzx())
    {{- end -}}
{{- end -}}

{{- /* ================================================================== */ -}}

{{- define "VariablesKotlinType" -}}
    {{- if and .variables (gt (len .variables) 0) -}}
    {{.operationName}}.Variables
    {{- else -}}
    Unit
    {{- end -}}
{{- end -}}

{{- /* ================================================================== */ -}}

{{- define "DataKotlinType" -}}
    Unit
{{- end -}}

{{- /* ==== MAIN CONTENT ================================================ */ -}}

package {{.kotlinPackage}}

import com.google.firebase.dataconnect.*
import kotlinx.serialization.Serializable

object {{.operationName}} {

{{ if and .variables (gt (len .variables) 0) }}
{{ template "VariablesClassDefinition" . }}
{{ end }}

}

{{ if eq .operationType "query" }}
{{ template "QueryHelpers" . }}
{{ else if eq .operationType "mutation" }}
{{ template "MutationHelpers" . }}
{{ else }}
{{ fail2 "unrecognized value for operationType" .operationType }}
{{ end }}
