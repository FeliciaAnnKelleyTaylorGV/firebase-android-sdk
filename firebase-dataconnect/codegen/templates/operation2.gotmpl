{{- /***************************************************************************
Emits a Kotlin data class.
Argument type: kotlinClass
*************************************************************************/ -}}
{{- define "KotlinDataClass" -}}
@Serializable data class {{ .Name }}({{ template "KotlinDataClassConstructorParameters" .ConstructorParameters }})
{{- if .HasBody }} {
{{- range .SecondaryConstructors }}
constructor(
  {{- template "KotlinFunctionParameters" .Parameters -}}
) : this(
  {{- template "KotlinFunctionArguments" .PrimaryConstructorArguments -}}
)
{{- end }}
{{- range .NestedClasses }}
{{ template "KotlinDataClass" . }}
{{- end }}
}
{{- end -}}
{{- end -}}

{{- /***************************************************************************
Emits the parameter list of a Kotlin data class constructor.
Argument type: []kotlinFunctionParameter
*************************************************************************/ -}}
{{- define "KotlinDataClassConstructorParameters" -}}
    {{- range . -}}
        val {{ .Name }}: {{ .KotlinType }}
        {{- if not .IsLast }}, {{ end -}}
    {{- end -}}
{{- end -}}

{{- /***************************************************************************
Emits the parameter list of a Kotlin function.
Argument type: []kotlinFunctionParameter
*************************************************************************/ -}}
{{- define "KotlinFunctionParameters" -}}
    {{- range . -}}
        {{ .Name }}: {{ .KotlinType }}
        {{- if not .IsLast }}, {{ end -}}
    {{- end -}}
{{- end -}}

{{- /***************************************************************************
Emits the argument list of a Kotlin function call.
Argument type: []kotlinFunctionArgument
*************************************************************************/ -}}
{{- define "KotlinFunctionArguments" -}}
    {{- range . -}}
        {{ .Name }}=
        {{- if eq .Expression nil -}}
            {{ .Name }}
        {{- else -}}
            {{ .Expression.FunctionName }}(
                {{- template "KotlinFunctionArguments" .Expression.Arguments -}}
            )
        {{- end -}}
        {{- if not .IsLast }}, {{ end -}}
    {{- end -}}
{{- end -}}

{{- /***************************************************************************
Emits the argument list of a Kotlin function call where each parameter is simply
passed on verbatim in the form name1=name1, name2=name2, etc.
Argument type: []kotlinFunctionParameter
*************************************************************************/ -}}
{{- define "KotlinFunctionForwardedArguments" -}}
    {{- range . -}}
        {{ .Name }}={{ .Name }}
        {{- if not .IsLast }}, {{ end -}}
    {{- end -}}
{{- end -}}

{{- /***************************************************************************
Emits the convenience function and typealias definitions for working with a
graphql mutation.
Argument Type: operationTemplateData
*************************************************************************/ -}}
{{- define "MutationConvenienceDefinitions" -}}
typealias {{ .OperationName }}MutationRef = MutationRef<{{ .OperationName }}.{{ .Variables.Name }}, Unit>

suspend fun MutationRef<{{ .OperationName }}.{{ .Variables.Name }}, Unit>.execute(
    {{- template "KotlinFunctionParameters" .ConvenienceFunctionParameters -}}
)
  = execute(
    {{- .OperationName }}.{{ .Variables.Name }}(
    {{- template "KotlinFunctionForwardedArguments" .ConvenienceFunctionParameters -}}
    ))
{{- end -}}

{{- /***************************************************************************
Emits the convenience function and typealias definitions for working with a
graphql query.
Argument Type: operationTemplateData
*************************************************************************/ -}}
{{- define "QueryConvenienceDefinitions" -}}
typealias {{ .OperationName }}QueryRef = QueryRef<{{ .OperationName }}.{{ .Variables.Name }}, Unit>
typealias {{ .OperationName }}QuerySubscription = QuerySubscription<{{ .OperationName }}.{{ .Variables.Name }}, Unit>

suspend fun QueryRef<{{ .OperationName }}.{{ .Variables.Name }}, Unit>.execute(
{{- template "KotlinFunctionParameters" .ConvenienceFunctionParameters -}}
) = execute(
{{- .OperationName }}.{{ .Variables.Name }}(
{{- template "KotlinFunctionForwardedArguments" .ConvenienceFunctionParameters -}}))

fun QueryRef<{{ .OperationName }}.{{ .Variables.Name }}, Unit>.subscribe(
{{- template "KotlinFunctionParameters" .ConvenienceFunctionParameters -}}
) = subscribe(
{{- .OperationName }}.{{ .Variables.Name }}(
{{- template "KotlinFunctionForwardedArguments" .ConvenienceFunctionParameters -}}))
{{- end -}}

{{- /******* BEGIN MAIN TEMPLATE ***********************************************/ -}}

package {{ .KotlinPackage }}

import com.google.firebase.dataconnect.*
import kotlinx.serialization.Serializable

object {{ .OperationName }} {

{{ if ne .Variables nil -}}
{{ template "KotlinDataClass" .Variables }}
{{ end }}

}

{{ if ne .Variables nil -}}
{{- if eq .OperationType "mutation" -}}
{{ template "MutationConvenienceDefinitions" . }}
{{- else if eq .OperationType "query" -}}
{{ template "QueryConvenienceDefinitions" . }}
{{- else -}}
{{ fail "unsupported value for .OperationType: " .OperationType }}
{{- end }}
{{- end }}